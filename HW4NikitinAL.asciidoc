+*In[1]:*+
[source, ipython3]
----
import numpy as np
----


+*In[2]:*+
[source, ipython3]
----
a = np.array([[1,2,1], [-2,1,1]])
b = np.array([[3, 1], [-1, 0], [2, 4]])
c = np.array([[-2,2], [1, -1], [1,2]])
----




+*In[3]:*+
[source, ipython3]
----
print(f"Размер матрицы A : {a.shape}")
print(f"Размер матрицы B : {b.shape}")
----


+*Out[3]:*+
----
Размер матрицы A : (2, 3)
Размер матрицы B : (3, 2)
----




+*In[4]:*+
[source, ipython3]
----
b.resize((2,3), refcheck=False)
print(f"Матрица В выглядит теперь так: \n{b}")
----


+*Out[4]:*+
----
Матрица В выглядит теперь так: 
[[ 3  1 -1]
 [ 0  2  4]]
----


+*In[5]:*+
[source, ipython3]
----
result = a + 2*b
print(f"Результат вычисления A+2B :\n {result}")
----


+*Out[5]:*+
----
Результат вычисления A+2B :
 [[ 7  4 -1]
 [-2  5  9]]
----


+*In[6]:*+
[source, ipython3]
----
b = np.array([[3, 1], [-1, 0], [2, 4]])
----


+*In[7]:*+
[source, ipython3]
----
result = b + 2*c
print(f"Результат вычисления B+2C :\n {result}")
----


+*Out[7]:*+
----
Результат вычисления B+2C :
 [[-1  5]
 [ 1 -2]
 [ 4  8]]
----




+*In[8]:*+
[source, ipython3]
----
chess = np.zeros((8,8), dtype="int")
chess[::2, 1::2] = 1
chess[1::2, 0::2] = 1
chess
----


+*Out[8]:*+
----array([[0, 1, 0, 1, 0, 1, 0, 1],
       [1, 0, 1, 0, 1, 0, 1, 0],
       [0, 1, 0, 1, 0, 1, 0, 1],
       [1, 0, 1, 0, 1, 0, 1, 0],
       [0, 1, 0, 1, 0, 1, 0, 1],
       [1, 0, 1, 0, 1, 0, 1, 0],
       [0, 1, 0, 1, 0, 1, 0, 1],
       [1, 0, 1, 0, 1, 0, 1, 0]])----




+*In[9]:*+
[source, ipython3]
----
first = np.arange(0, 1.5, 0.1)
print(f"Проверяем размерность первого созданного вектора:{first} -> {first.shape}")
second = np.arange(1, 7)
print(f"Проверяем размерность второго созданного вектора:{second} -> {second.shape}")

----


+*Out[9]:*+
----
Проверяем размерность первого созданного вектора:[0.  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.  1.1 1.2 1.3 1.4] -> (15,)
Проверяем размерность второго созданного вектора:[1 2 3 4 5 6] -> (6,)
----


+*In[10]:*+
[source, ipython3]
----
# first.reshape()
first = np.resize(first, (5,3))
second = np.resize(second, (3,2))
print(f"Проверяем размерность первого созданного вектора:\n{first} -> {first.shape}")
print(f"Проверяем размерность второго созданного вектора:\n{second} -> {second.shape}")
----


+*Out[10]:*+
----
Проверяем размерность первого созданного вектора:
[[0.  0.1 0.2]
 [0.3 0.4 0.5]
 [0.6 0.7 0.8]
 [0.9 1.  1.1]
 [1.2 1.3 1.4]] -> (5, 3)
Проверяем размерность второго созданного вектора:
[[1 2]
 [3 4]
 [5 6]] -> (3, 2)
----




+*In[11]:*+
[source, ipython3]
----
result = np.dot(first, second)
print(f"Результат перемножения матриц с помощью 'dot' : \n{result}")
----


+*Out[11]:*+
----
Результат перемножения матриц с помощью 'dot' : 
[[ 1.3  1.6]
 [ 4.   5.2]
 [ 6.7  8.8]
 [ 9.4 12.4]
 [12.1 16. ]]
----




+*In[12]:*+
[source, ipython3]
----
vector = np.arange(1, 73, 2, dtype=np.int32)
 
print(f"Полученный вектор: \n{vector} \nИ его размерность: {vector.shape}")
----


+*Out[12]:*+
----
Полученный вектор: 
[ 1  3  5  7  9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47
 49 51 53 55 57 59 61 63 65 67 69 71] 
И его размерность: (36,)
----


+*In[13]:*+
[source, ipython3]
----
print("Вектор с числами кратным 3")
print(vector[vector % 3 == 0])
----


+*Out[13]:*+
----
Вектор с числами кратным 3
[ 3  9 15 21 27 33 39 45 51 57 63 69]
----
